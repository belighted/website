lang: "en"
slug: "make-xslx-files-with-axlsx-basics"
originalPath: "https://www.belighted.com/blog/make-xslx-files-with-axlsx-basics"
title: "Make xlsx files with AXLSX : basics"
author: "Pierre M."
description: "Come discover whats hidden behind the AXLSX gem. Powerfull tool for exporting data from a project."
image: "https://belighted.com/images/default_blogpost_image_7@1x.jpg#keepProtocol"
date: 1325376000000
body: "<p>Many organizations need Excel’s Worksheets. Therefore, it’s not surprising that you can find a bunch of gems that help you doing the job. For our last project, we choose <strong><a href=\"https://github.com/randym/axlsx\">axlsx</a> </strong>because of our need of integrating charts in ours Workbooks, and other advanced features like styling cells.</p>\n<!--more-->\n<p>The client gave us a sample xlsx export file with graphs and styles generated by his former app. I have to make my own worksheet similar and supply it in the new app.</p>\n<h3>Structure of Excel’s objects</h3>\n<p>Here is how it works. I let the code in a single file for the example; As you should aim to skinny controllers, it as to be refactored, for instance with presenters.</p>\n<figure class=\"code\">\n<div class=\"highlight\">\n<table>\n<tbody>\n<tr>\n<td class=\"gutter\">\n<pre class=\"line-numbers\"><span class=\"line-number\">1</span>\n<span class=\"line-number\">2</span>\n<span class=\"line-number\">3</span>\n<span class=\"line-number\">4</span>\n<span class=\"line-number\">5</span>\n<span class=\"line-number\">6</span>\n<span class=\"line-number\">7</span>\n<span class=\"line-number\">8</span>\n<span class=\"line-number\">9</span>\n<span class=\"line-number\">10</span>\n<span class=\"line-number\">11</span>\n<span class=\"line-number\">12</span>\n<span class=\"line-number\">13</span>\n<span class=\"line-number\">14</span>\n<span class=\"line-number\">15</span>\n<span class=\"line-number\">16</span>\n</pre>\n</td>\n<td class=\"code\">\n<pre><code class=\"ruby\"><span class=\"line\"><span class=\"nb\"><span class=\"keyword\">require</span></span> <span class=\"s1\"><span class=\"string\">'axlsx'</span></span>\n</span><span class=\"line\"><span class=\"k\"><span class=\"class\"><span class=\"keyword\">class</span></span></span><span class=\"class\"> <span class=\"nc\"><span class=\"title\">ExportsController</span></span> <span class=\"o\"><span class=\"inheritance\">&lt;</span></span><span class=\"inheritance\"> <span class=\"no\"><span class=\"parent\">ApplicationController</span></span></span><span class=\"no\"></span></span><span class=\"no\"></span>\n</span><span class=\"line\"> <span class=\"k\"><span class=\"function\"><span class=\"keyword\">def</span></span></span><span class=\"function\"> <span class=\"nf\"><span class=\"title\">index</span></span></span><span class=\"nf\"></span>\n</span><span class=\"line\"> <span class=\"nb\">format</span><span class=\"o\">.</span><span class=\"n\">xlsx</span> <span class=\"k\"><span class=\"keyword\">do</span></span>\n</span><span class=\"line\"> <span class=\"no\"><span class=\"constant\">Axlsx</span></span><span class=\"constant\"><span class=\"o\">::</span><span class=\"no\">Package</span></span><span class=\"no\"></span><span class=\"o\">.</span><span class=\"n\">new</span> <span class=\"k\"><span class=\"keyword\">do</span></span> <span class=\"o\">|</span><span class=\"n\">my_axlsx_package</span><span class=\"o\">|</span>\n</span><span class=\"line\"> <span class=\"n\">my_axlsx_package</span><span class=\"o\">.</span><span class=\"n\">workbook</span> <span class=\"k\"><span class=\"keyword\">do</span></span> <span class=\"o\">|</span><span class=\"n\">wb</span><span class=\"o\">|</span>\n</span><span class=\"line\"> <span class=\"n\">wb</span><span class=\"o\">.</span><span class=\"n\">add_worksheet</span><span class=\"p\">(</span><span class=\"nb\">name</span><span class=\"ss\"><span class=\"symbol\">:<span class=\"string\">'foo'</span></span></span><span class=\"p\">)</span> <span class=\"k\"><span class=\"keyword\">do</span></span> <span class=\"o\">|</span><span class=\"n\">sheet</span><span class=\"o\">|</span>\n</span><span class=\"line\"> <span class=\"c1\"><span class=\"comment\"># filling cells, see below</span></span>\n</span><span class=\"line\"> <span class=\"c1\"><span class=\"comment\"># finding cells, see below</span></span>\n</span><span class=\"line\"> <span class=\"k\"><span class=\"keyword\">end</span></span>\n</span><span class=\"line\"> <span class=\"k\"><span class=\"keyword\">end</span></span>\n</span><span class=\"line\"> <span class=\"n\">send_data</span> <span class=\"n\">my_axlsx_package</span><span class=\"o\">.</span><span class=\"n\">to_stream</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">,</span> <span class=\"ss\"><span class=\"symbol\">:filename</span></span> <span class=\"o\">=&gt;</span> <span class=\"s2\"><span class=\"string\">\"export.xlsx\"</span></span>\n</span><span class=\"line\"> <span class=\"k\"><span class=\"keyword\">end</span></span>\n</span><span class=\"line\"> <span class=\"k\"><span class=\"keyword\">end</span></span>\n</span><span class=\"line\"> <span class=\"k\"><span class=\"keyword\">end</span></span>\n</span><span class=\"line\"><span class=\"k\"><span class=\"keyword\">end</span></span>\n</span></code></pre>\n</td>\n</tr>\n</tbody>\n</table>\n</div>\n</figure>\n<p>Axlsx provides us those business classes : Package, Workbook, Worksheet Row and Cell (… and even more).</p>\n<h3>Fill data in the worksheet</h3>\n<p>The best way to fill your sheet is to do it with arrays.</p>\n<p>Notice that you can pass an optionnal array of styles. <a href=\"https://github.com/randym/axlsx/blob/master/examples/example.rb\">(see examples in the gem)</a></p>\n<figure class=\"code\">\n<div class=\"highlight\">\n<table>\n<tbody>\n<tr>\n<td class=\"gutter\">\n<pre class=\"line-numbers\"><span class=\"line-number\">1</span>\n<span class=\"line-number\">2</span>\n</pre>\n</td>\n<td class=\"code\">\n<pre><code class=\"ruby\"><span class=\"line\"><span class=\"c1\"><span class=\"comment\"># filling data in the worksheet</span></span>\n</span><span class=\"line\"><span class=\"n\">sheet</span><span class=\"o\">.</span><span class=\"n\">add_row</span> <span class=\"o\">[</span><span class=\"s2\"><span class=\"string\">\"This text comes in my first cell\"</span></span><span class=\"p\">,</span> <span class=\"mi\"><span class=\"number\">33</span></span><span class=\"p\">,</span> <span class=\"kp\"><span class=\"keyword\">true</span></span><span class=\"p\">,</span> <span class=\"s2\"><span class=\"string\">\"this text come in the fourth cell\"</span></span><span class=\"o\">]</span>\n</span></code></pre>\n</td>\n</tr>\n</tbody>\n</table>\n</div>\n</figure>\n<p>If you’d rather apply your style after having build your sheet, finding right place of each style could be tricky.</p>\n<h3>Finding cells</h3>\n<p>Worksheet’s instances offer those key methods : <strong>rows</strong> , <strong>cells</strong> and <strong>[]</strong>. All return Cell ‘s instances.</p>\n<p>The more convenient is “[]” that is Excel like.</p>\n<figure class=\"code\">\n<div class=\"highlight\">\n<table>\n<tbody>\n<tr>\n<td class=\"gutter\">\n<pre class=\"line-numbers\"><span class=\"line-number\">1</span>\n<span class=\"line-number\">2</span>\n<span class=\"line-number\">3</span>\n<span class=\"line-number\">4</span>\n</pre>\n</td>\n<td class=\"code\">\n<pre><code class=\"ruby\"><span class=\"line\"><span class=\"c1\"><span class=\"comment\"># finding in Excel style</span></span>\n</span><span class=\"line\"><span class=\"n\">sheet</span><span class=\"o\">[</span><span class=\"s2\"><span class=\"string\">\"B1\"</span></span><span class=\"o\">]</span> <span class=\"c1\"><span class=\"comment\"># returns the Cell object which value is \"33\". Great!</span></span>\n</span><span class=\"line\"><span class=\"c1\"><span class=\"comment\"># finding with indexes</span></span>\n</span><span class=\"line\"><span class=\"n\">sheet</span><span class=\"o\">[</span><span class=\"no\"><span class=\"constant\">Axlsx</span></span><span class=\"constant\"><span class=\"o\">::</span></span><span class=\"o\"></span><span class=\"n\">cell_r</span><span class=\"p\">(</span><span class=\"mi\"><span class=\"number\">1</span></span><span class=\"p\">,</span><span class=\"mi\"><span class=\"number\">0</span></span><span class=\"p\">)</span><span class=\"o\">]</span> <span class=\"c1\"><span class=\"comment\"># returns the same cell.</span></span>\n</span></code></pre>\n</td>\n</tr>\n</tbody>\n</table>\n</div>\n</figure>\n<p>Now you can apply style style and format to your cell, and update his value.</p>\n<p><strong>Notes :</strong></p>\n<ol>\n<li>You can use Excel alphanumeric references or indexes. Beware that indexes start at 0. The use of both system in the same code may be confusing.</li>\n<li>brackets method takes also cells range like “A1:B4”</li>\n</ol>\n<p>It’s worth digging in that gem distributed under MIT license. A last word : Randy Morgan make it full covered by test/unit.<br><br><!--HubSpot Call-to-Action Code --><span class=\"hs-cta-wrapper\" id=\"hs-cta-wrapper-fb3606cc-cc1b-47d0-ae85-2c9f69837fe2\"><span class=\"hs-cta-node hs-cta-fb3606cc-cc1b-47d0-ae85-2c9f69837fe2\" id=\"hs-cta-fb3606cc-cc1b-47d0-ae85-2c9f69837fe2\"><!--[if lte IE 8]><div id=\"hs-cta-ie-element\"></div><![endif]--><a href=\"https://cta-redirect.hubspot.com/cta/redirect/1684659/fb3606cc-cc1b-47d0-ae85-2c9f69837fe2\" target=\"_blank\"><img class=\"hs-cta-img\" id=\"hs-cta-img-fb3606cc-cc1b-47d0-ae85-2c9f69837fe2\" style=\"border-width:0px;\" src=\"https://no-cache.hubspot.com/cta/default/1684659/fb3606cc-cc1b-47d0-ae85-2c9f69837fe2.png\" alt=\"New Call-to-action\"></a></span></span><!-- end HubSpot Call-to-Action Code --></p>\n<div id=\"disqus_thread\">&nbsp;</div>"
tags:
  - label: "Under the hood"
    value: "under-the-hood"

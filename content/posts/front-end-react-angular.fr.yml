lang: "fr"
slug: "front-end-react-angular"
originalPath: "https://www.belighted.com/blog/front-end-react-angular"
article:
  title: "The front-end: React vs Angular"
  content: "<span id=\"hs_cos_wrapper_post_body\" class=\"hs_cos_wrapper hs_cos_wrapper_meta_field hs_cos_wrapper_type_rich_text\" data-hs-cos-general-type=\"meta_field\" data-hs-cos-type=\"rich_text\"><p>To put together the front end of a web application, developers often start with an existing framework. React and Angular are the two <strong><a href=\"https://medium.com/@TechMagic/reactjs-vs-angular5-vs-vue-js-what-to-choose-in-2018-b91e028fa91d\">most popular</a> </strong>front-end frameworks available. Today we’ll talk a bit about each and which one we prefer.</p>\n<p>But first, let’s back up and clarify a few terms for the non-technical among us...</p>\n<h2>What does “front end” mean?</h2>\n<p>When we talk about front end, we’re talking about the parts of an app that users see and interact with. For example, when you book a place to stay on Airbnb, you are interacting with the front end of the app. The back end consists of things you don’t see but are required to make it work, like the server and databases.</p>\n<p><strong>When developing the front end of a web or mobile app, your business will benefit from two disciplines: UI and UX. These work together closely, but the focus of each is different.</strong></p>\n<p><!--more-->UX (user experience) is concerned with making a product easy and enjoyable to use. It takes into account what people need from a product and how they want to use it. UI (user interface) deals more with visuals - the look and feel that will make an app attractive and fit with the brand. Learn more about the differences between UI and UX design <strong><a href=\"https://careerfoundry.com/en/blog/ux-design/the-difference-between-ux-and-ui-design-a-laymans-guide/\">here</a></strong>.</p>\n<p>When planning front-end development, you will need to decide which framework to use. This decision will <strong><a href=\"https://www.sitepen.com/blog/2017/06/27/web-frameworks-user-experience-design/\">impact your ability to deliver</a></strong> the user experience and interface you might hope for.</p>\n<p>Let’s jump into two of the most popular front-end frameworks for SaaS web apps: React and Angular.</p>\n<h2>React vs. Angular - choosing a framework</h2>\n<p>Angular is a framework built by Google specifically for creating single page applications (web pages that update dynamically as you interact with them). It provides everything you need to quickly put together the user portion of the web application. It also has <strong><a href=\"http://blog.thinkwik.com/sturdy-faceoff-angular-reactjs/\">other advantages</a></strong> but it has a rigid structure that will very quickly reach limitations.</p>\n<p>React also lets you build single page front end apps. But it’s rare that a new SaaS app should be built as a single page app, which can be costly.</p>\n<p>At Belighted we rarely see situations where it makes sense to build products entirely as single page apps. It’s more likely that a portion of an app will have a single page component. For example, <strong><a href=\"https://www.belighted.com/case-studies/dokeos-moves-its-software-to-saas-model\">when we built Dokeos</a></strong> there was a need to keep the user on the same page in some parts of the site.</p>\n<h3>React is not actually a framework, which makes it more flexible</h3>\n<p>React is not a full framework. <strong><a href=\"https://www.reddit.com/r/javascript/comments/7xc9it/we_do_we_call_react_a_library_rather_than/\">It is a library</a></strong> created by developers at Facebook to render views. Since it’s not a framework, it gives the advantage of flexibility, because developers can integrate it into a <strong><a href=\"https://www.belighted.com/blog/ruby-on-rails-demystified\">Ruby</a> </strong>application more easily.</p>\n<p>Philippe, a developer at Belighted, explains, “Angular offers a solution for all the issues that must be addressed when building an app (security, router, permissions, and so on) while React focuses on only one aspect: how it looks (rendering pages). React lets us keep our own specifications. It also lets us determine which pages to focus our efforts on for the greatest impact.”</p>\n<p>Maxime, a senior front-end developer at Belighted, breaks out the reasons he prefers working in React:</p>\n<ul>\n<li>Better file organization options</li>\n<li><strong>Much faster to render and load smoothly</strong></li>\n<li>Better understanding on first code read</li>\n<li><strong>Better optimization - more SEO friendly</strong></li>\n<li>Easy to add React to only some parts of the page (for Angular it’s way more complicated)</li>\n<li>Data binding</li>\n<li>Big community</li>\n<li><strong>Redux</strong></li>\n</ul>\n<h2>Why and when we use Redux with React</h2>\n<p>Redux lets you plug any data into any section of the web page while keeping the code clean. We especially appreciate this in instances when data is being forwarded down through many layers of code.&nbsp;&nbsp;</p>\n<p>Consider the example of Twitter needing to display the user’s avatar in multiple spots on a page:</p>\n<p><img src=\"https://www.belighted.com/hs-fs/hubfs/twitter-user-data.png%20(777%C3%97564)%202018-08-13%2011-47-40.png?width=1350&amp;name=twitter-user-data.png%20(777%C3%97564)%202018-08-13%2011-47-40.png\" alt=\"twitter-user-data.png (777×564) 2018-08-13 11-47-40\" width=\"1350\" srcset=\"https://www.belighted.com/hs-fs/hubfs/twitter-user-data.png%20(777%C3%97564)%202018-08-13%2011-47-40.png?width=675&amp;name=twitter-user-data.png%20(777%C3%97564)%202018-08-13%2011-47-40.png 675w, https://www.belighted.com/hs-fs/hubfs/twitter-user-data.png%20(777%C3%97564)%202018-08-13%2011-47-40.png?width=1350&amp;name=twitter-user-data.png%20(777%C3%97564)%202018-08-13%2011-47-40.png 1350w, https://www.belighted.com/hs-fs/hubfs/twitter-user-data.png%20(777%C3%97564)%202018-08-13%2011-47-40.png?width=2025&amp;name=twitter-user-data.png%20(777%C3%97564)%202018-08-13%2011-47-40.png 2025w, https://www.belighted.com/hs-fs/hubfs/twitter-user-data.png%20(777%C3%97564)%202018-08-13%2011-47-40.png?width=2700&amp;name=twitter-user-data.png%20(777%C3%97564)%202018-08-13%2011-47-40.png 2700w, https://www.belighted.com/hs-fs/hubfs/twitter-user-data.png%20(777%C3%97564)%202018-08-13%2011-47-40.png?width=3375&amp;name=twitter-user-data.png%20(777%C3%97564)%202018-08-13%2011-47-40.png 3375w, https://www.belighted.com/hs-fs/hubfs/twitter-user-data.png%20(777%C3%97564)%202018-08-13%2011-47-40.png?width=4050&amp;name=twitter-user-data.png%20(777%C3%97564)%202018-08-13%2011-47-40.png 4050w\" sizes=\"(max-width: 1350px) 100vw, 1350px\"></p>\n<p><span>Michaël Albert, a project manager at Belighted, explains how Redux does this:</span></p>\n<blockquote>\n<p><strong>“The idea of Redux is to have the state of the application centralized in one place: the store. It means that if any component (a part of a page) needs data, it will look to the store. If data is changed, it triggers an action that will update the store. So a lot of the business logic is gathered in the actions and store.\"</strong></p>\n<p>Another big benefit is that when data is modified in the store, all the components requiring it will receive the new value, without requesting the developers to write a lot of code. It makes the application smarter, simpler, more maintainable .... and ready for more complex business.”</p>\n</blockquote>\n<p>Redux also works great when you need to cache data between views or if an app will maintain large amounts of data.</p>\n<h2>How GraphQL pulls together the front and back end</h2>\n<p>If we use Ruby on Rails for the back end and React for the front end, we then need something to tie the two together. Enter GraphQL, a language that <strong><a href=\"https://www.reindex.io/blog/how-facebooks-graphql-will-change-backend-development/\">facilitates</a></strong> the movement of data between the front and back end of a website or app.</p>\n<p><strong>GraphQL is a new API standard that provides a more efficient, powerful and flexible alternative to RESTful API.</strong> At the beginning, it was developed and open-sourced by Facebook. Now a large community of both companies and individuals supports it.</p>\n<p>“In a Restful API approach, each endpoint (a URL the front-end application will call) is dedicated to a specific action and returns a specific dataset,” says Michaël. “It has to be coded specifically in the back end as well as the front end. <strong>GraphQL is a query language having a single endpoint, It allows the front-end developers to query the information they need among the dataset made available for them.</strong> It still requires some work for the back-end developers to define the dataset and the actions that are available. But <strong>it decreases greatly the workload for the back-end devs and brings more autonomy to the front-end devs.</strong>”</p>\n<h2>Why we think React is the best choice for building SaaS web apps</h2>\n<p>The question of which technology to choose when building an app is often the source of technical debt. This means that flexibility is really important.</p>\n<p>Says Philippe, <strong>“Working with quite unique projects, we must be able to evolve technologies as we discover the need. We can't make all the final decisions from the start.”</strong></p>\n<p>He explains,</p>\n<blockquote>“ReactJS is suitable for developing small applications that will be extended with more functionality. React's architecture is easier to scale than the classical MVC architecture in AngularJS. React allows us to \"sprinkle\" components where they are most needed while keeping a simple page for the rest. It greatly speeds up iteration time when we have very little insight about how the market will react to our product. When we know more about what the \"right\" UX/UI is, we can introduce more carefully crafted components.”</blockquote>\n<p>Another way to put it is: <strong>We build the walls while we are colourblind, and then we paint when we gain our sight.</strong></p>\n<p>While no framework is perfect all the time, we enjoy React for many reasons, among them the ability to evolve and scale web apps for startups as they grow.</p>\n<p><span>Check out our next post in this series: <strong><a href=\"https://www.belighted.com/blog/mobile-saas-native-hybrid\">Hybrid vs. native for your mobile SaaS application.<br></a></strong></span></p>\n\n<p><span><strong><!--HubSpot Call-to-Action Code --><span class=\"hs-cta-wrapper\" id=\"hs-cta-wrapper-2a757af5-8c70-4e5b-bd84-3e0c399fa61d\"><span class=\"hs-cta-node hs-cta-2a757af5-8c70-4e5b-bd84-3e0c399fa61d\" id=\"hs-cta-2a757af5-8c70-4e5b-bd84-3e0c399fa61d\"><!--[if lte IE 8]><div id=\"hs-cta-ie-element\"></div><![endif]--><a href=\"https://cta-redirect.hubspot.com/cta/redirect/1684659/2a757af5-8c70-4e5b-bd84-3e0c399fa61d\"><img class=\"hs-cta-img\" id=\"hs-cta-img-2a757af5-8c70-4e5b-bd84-3e0c399fa61d\" src=\"https://no-cache.hubspot.com/cta/default/1684659/2a757af5-8c70-4e5b-bd84-3e0c399fa61d.png\" alt=\"You have a software idea but can't code?\"></a></span></span><!-- end HubSpot Call-to-Action Code --></strong></span></p></span>"
  textBody: ""
  html: "<!--<![endif]--><head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n    <meta name=\"author\" content=\"Nicolas Jacobeus\">\n    <meta name=\"description\" content=\"Designing the front end of your web app often starts with choosing a framework. Here we discuss our choice and why it works well for SaaS startups.\">\n    <meta name=\"generator\" content=\"HubSpot\">\n    <title>The front-end: React vs Angular</title>\n    <link rel=\"shortcut icon\" href=\"https://www.belighted.com/hubfs/logo-belighted.png\">\n    \n\n    \n\n    <meta property=\"og:description\" content=\"Designing the front end of your web app often starts with choosing a framework. Here we discuss our choice and why it works well for SaaS startups.\">\n    <meta property=\"og:title\" content=\"The front-end: React vs Angular\">\n    <meta name=\"twitter:description\" content=\"Designing the front end of your web app often starts with choosing a framework. Here we discuss our choice and why it works well for SaaS startups.\">\n    <meta name=\"twitter:title\" content=\"The front-end: React vs Angular\">\n\n\n    <style>\na.cta_button{-moz-box-sizing:content-box !important;-webkit-box-sizing:content-box !important;box-sizing:content-box !important;vertical-align:middle}.hs-breadcrumb-menu{list-style-type:none;margin:0px 0px 0px 0px;padding:0px 0px 0px 0px}.hs-breadcrumb-menu-item{float:left;padding:10px 0px 10px 10px}.hs-breadcrumb-menu-divider:before{content:'›';padding-left:10px}.hs-featured-image-link{border:0}.hs-featured-image{float:right;margin:0 0 20px 20px;max-width:50%}@media (max-width: 568px){.hs-featured-image{float:none;margin:0;width:100%;max-width:100%}}.hs-screen-reader-text{clip:rect(1px, 1px, 1px, 1px);height:1px;overflow:hidden;position:absolute !important;width:1px}\n</style>\n\n<link rel=\"stylesheet\" href=\"/hs/hsstatic/AsyncSupport/static-1.70/sass/comments_listing_asset.css\">\n<link rel=\"stylesheet\" href=\"/hs/hsstatic/AsyncSupport/static-1.70/sass/rss_post_listing.css\">\n    \n\n    \n    \n\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n\n\n<!-- Facebook Pixel Code -->\n\n<noscript>&lt;img  height=\"1\" width=\"1\" style=\"display:none\" src=\"https://www.facebook.com/tr?id=706355809571598&amp;amp;ev=PageView&amp;amp;noscript=1\"&gt;</noscript>\n<!-- End Facebook Pixel Code -->\n<link rel=\"amphtml\" href=\"https://www.belighted.com/blog/front-end-react-angular?hs_amp=true\">\n\n<meta property=\"og:image\" content=\"https://www.belighted.com/hubfs/tech_stack_react_vs_angular_banner_blog.jpg#keepProtocol\">\n<meta property=\"og:image:width\" content=\"1112\">\n<meta property=\"og:image:height\" content=\"400\">\n<meta property=\"og:image:alt\" content=\"tech_stack_react_vs_angular_banner_blog\">\n<meta name=\"twitter:image\" content=\"https://www.belighted.com/hubfs/tech_stack_react_vs_angular_banner_blog.jpg#keepProtocol\">\n<meta name=\"twitter:image:alt\" content=\"tech_stack_react_vs_angular_banner_blog\">\n\n<meta property=\"og:url\" content=\"https://www.belighted.com/blog/front-end-react-angular\">\n<meta name=\"twitter:card\" content=\"summary_large_image\">\n\n<link rel=\"canonical\" href=\"https://www.belighted.com/blog/front-end-react-angular\">\n\n<meta property=\"og:type\" content=\"article\">\n<link rel=\"alternate\" type=\"application/rss+xml\" href=\"https://www.belighted.com/blog/rss.xml\">\n<meta name=\"twitter:domain\" content=\"www.belighted.com\">\n\n\n<meta http-equiv=\"content-language\" content=\"en\">\n<link rel=\"stylesheet\" href=\"//cdn2.hubspot.net/hub/-1/hub_generated/template_assets/1495141902003/hubspot_default/shared/responsive/layout.min.css\">\n\n\n<link rel=\"stylesheet\" href=\"https://www.belighted.com/hs-fs/hub/1684659/hub_generated/template_assets/8523445462/1569881984337/Marketplace/Neambo/Act21/Coded_Files/Act21.min.css\">\n\n\n\n\n</head>\n<body class=\"blog-1 featured-image-right   hs-content-id-5972023739 hs-blog-post hs-blog-id-4544204069\" style=\"\"></body>"

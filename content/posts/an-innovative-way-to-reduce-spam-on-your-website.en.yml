lang: "en"
slug: "an-innovative-way-to-reduce-spam-on-your-website"
originalPath: "https://www.belighted.com/blog/an-innovative-way-to-reduce-spam-on-your-website"
article:
  title: "An innovative way to reduce spam on your website"
  content: "<span id=\"hs_cos_wrapper_post_body\" class=\"hs_cos_wrapper hs_cos_wrapper_meta_field hs_cos_wrapper_type_rich_text\" data-hs-cos-general-type=\"meta_field\" data-hs-cos-type=\"rich_text\"><h2>What we wanted</h2>\n<p>As you may have noticed, we’ve recently launched our brand new website. And as a web development agency, the contact form is our primary channel for leads creation. We wanted to keep it as simple as possible to let our customers get in touch with us without any unnecessary hassle.</p>\n<!--more-->\n<h2>The issue</h2>\n<p>The contact form was quickly used by spammers, filling our inbox with unwanted and useless e-mails, and costing us time and energy to handle.</p>\n<h2>Existing solution</h2>\n<p>The most common way to avoid those annoying e-mails is to use CAPTCHAs, because users are familiar with it. However we didn’t want to force our customers to fill in this additional input: the user could be driven to stop his action because of this too complicated contact form.</p>\n<h2>Our solution</h2>\n<p>After some research, we found out that since bots are basically computers they manage to visit our website and send a successful contact request in less than 5 seconds. Our idea was to set a timer, in order to block the requests that are suspicious.</p>\n<p>In your Rails app, this means adding the following code to the application configuration:</p>\n<pre><code class=\"ruby\">\n<span class=\"constant\">Rails</span>.application.config.antispam_timer = <span class=\"number\">30</span>\n</code></pre>\n<p>In our case, the number the antispam_timer is set to 30 seconds. You can now add time-related information to the user session in your application controller using a before_filter, like this:</p>\n<pre><code class=\"ruby\">\n<span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ApplicationController</span> <span class=\"inheritance\">&lt; <span class=\"parent\">ActionController::Base</span></span></span>\n   before_filter <span class=\"symbol\">:anti_spam</span>\n\n    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">anti_spam</span></span>\n     session[<span class=\"string\">'antispam_timer'</span>] ||= <span class=\"constant\">Time</span>.now\n    <span class=\"keyword\">end</span>\n\n<span class=\"keyword\">end</span>\n</code></pre>\n<p>Finally, you can use this information in your contact request controller. This is how we used it:</p>\n<pre><code class=\"ruby\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ContactRequestsController</span> <span class=\"inheritance\">&lt; <span class=\"parent\">ApplicationController</span></span></span>\n  <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">create</span></span>\n    \n    contact_spam = <span class=\"keyword\">false</span>\n    time_to_comment = <span class=\"constant\">Time</span>.now.to_time - session[<span class=\"string\">'antispam_timer'</span>].to_time\n    <span class=\"keyword\">if</span> time_to_comment &lt; <span class=\"constant\">Rails</span>.application.config.antispam_timer\n      spam_logger.warn(<span class=\"string\">\"There is potential spam detected \n          for IP <span class=\"subst\">#{request.env[<span class=\"string\">'REMOTE_ADDR'</span>]}</span>. Antispam \n          threshold not reached (took <span class=\"subst\">#{time_to_comment.to_i}</span>s).\"</span>)\n      spam_logger.warn(<span class=\"string\">\"Params were : <span class=\"subst\">#{params}</span>\"</span>)\n      contact_spam = <span class=\"keyword\">true</span>\n    <span class=\"keyword\">end</span>\n    \n        <span class=\"comment\"># if you have to send or not your mail. </span>\n<span class=\"keyword\">end</span>\n</code></pre>\n<p>For your information, there exists another solution, implemented in a Rails gem: <a href=\"https://github.com/curtis/honeypot-captcha\">Honeypot CAPTCHA</a>. Practically, it adds a hidden field in your form that must stay empty as the user isn’t able to see it, but that bots will actually fill. Then in your backend controller you can easily check if the request is coming from a real user or from a bot.</p>\n<p><br><!--HubSpot Call-to-Action Code --><span class=\"hs-cta-wrapper\" id=\"hs-cta-wrapper-fb3606cc-cc1b-47d0-ae85-2c9f69837fe2\"><span class=\"hs-cta-node hs-cta-fb3606cc-cc1b-47d0-ae85-2c9f69837fe2\" id=\"hs-cta-fb3606cc-cc1b-47d0-ae85-2c9f69837fe2\"><!--[if lte IE 8]><div id=\"hs-cta-ie-element\"></div><![endif]--><a href=\"https://cta-redirect.hubspot.com/cta/redirect/1684659/fb3606cc-cc1b-47d0-ae85-2c9f69837fe2\" target=\"_blank\"><img class=\"hs-cta-img\" id=\"hs-cta-img-fb3606cc-cc1b-47d0-ae85-2c9f69837fe2\" src=\"https://no-cache.hubspot.com/cta/default/1684659/fb3606cc-cc1b-47d0-ae85-2c9f69837fe2.png\" alt=\"New Call-to-action\"></a></span></span><!-- end HubSpot Call-to-Action Code --></p>\n</span>"
  textBody: ""
  html: "<!--<![endif]--><head>\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n    <meta name=\"author\" content=\"Philippe B.\">\n    <meta name=\"description\" content=\"We introduce here an innovative way to handle the flow of unwanted e-mails through a new anti-spam technique in replacement of the well-known CAPTCHA.\">\n    <meta name=\"generator\" content=\"HubSpot\">\n    <title>An innovative way to reduce spam on your website</title>\n    <link rel=\"shortcut icon\" href=\"https://www.belighted.com/hubfs/logo-belighted.png\">\n    \n\n    \n\n    <meta property=\"og:description\" content=\"We introduce here an innovative way to handle the flow of unwanted e-mails through a new anti-spam technique in replacement of the well-known CAPTCHA.\">\n    <meta property=\"og:title\" content=\"An innovative way to reduce spam on your website\">\n    <meta name=\"twitter:description\" content=\"We introduce here an innovative way to handle the flow of unwanted e-mails through a new anti-spam technique in replacement of the well-known CAPTCHA.\">\n    <meta name=\"twitter:title\" content=\"An innovative way to reduce spam on your website\">\n\n\n    <style>\na.cta_button{-moz-box-sizing:content-box !important;-webkit-box-sizing:content-box !important;box-sizing:content-box !important;vertical-align:middle}.hs-breadcrumb-menu{list-style-type:none;margin:0px 0px 0px 0px;padding:0px 0px 0px 0px}.hs-breadcrumb-menu-item{float:left;padding:10px 0px 10px 10px}.hs-breadcrumb-menu-divider:before{content:'›';padding-left:10px}.hs-featured-image-link{border:0}.hs-featured-image{float:right;margin:0 0 20px 20px;max-width:50%}@media (max-width: 568px){.hs-featured-image{float:none;margin:0;width:100%;max-width:100%}}.hs-screen-reader-text{clip:rect(1px, 1px, 1px, 1px);height:1px;overflow:hidden;position:absolute !important;width:1px}\n</style>\n\n<link rel=\"stylesheet\" href=\"/hs/hsstatic/AsyncSupport/static-1.70/sass/comments_listing_asset.css\">\n<link rel=\"stylesheet\" href=\"/hs/hsstatic/AsyncSupport/static-1.70/sass/rss_post_listing.css\">\n    \n\n    \n    \n\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n\n\n<!-- Facebook Pixel Code -->\n\n<noscript>&lt;img  height=\"1\" width=\"1\" style=\"display:none\" src=\"https://www.facebook.com/tr?id=706355809571598&amp;amp;ev=PageView&amp;amp;noscript=1\"&gt;</noscript>\n<!-- End Facebook Pixel Code -->\n<link rel=\"amphtml\" href=\"https://www.belighted.com/blog/an-innovative-way-to-reduce-spam-on-your-website?hs_amp=true\">\n\n<meta property=\"og:image\" content=\"https://belighted-website.s3.amazonaws.com/uploads/289348-grum-spambot-shut-down-massive-botnet-created-18-percent-of-worlds-spa.jpg#keepProtocol\">\n<meta property=\"og:image:width\" content=\"530\">\n<meta property=\"og:image:height\" content=\"398\">\n\n<meta name=\"twitter:image\" content=\"https://belighted-website.s3.amazonaws.com/uploads/289348-grum-spambot-shut-down-massive-botnet-created-18-percent-of-worlds-spa.jpg#keepProtocol\">\n\n\n<meta property=\"og:url\" content=\"https://www.belighted.com/blog/an-innovative-way-to-reduce-spam-on-your-website\">\n<meta name=\"twitter:card\" content=\"summary_large_image\">\n\n<link rel=\"canonical\" href=\"https://www.belighted.com/blog/an-innovative-way-to-reduce-spam-on-your-website\">\n\n<meta property=\"og:type\" content=\"article\">\n<link rel=\"alternate\" type=\"application/rss+xml\" href=\"https://www.belighted.com/blog/rss.xml\">\n<meta name=\"twitter:domain\" content=\"www.belighted.com\">\n\n\n<meta http-equiv=\"content-language\" content=\"en\">\n<link rel=\"stylesheet\" href=\"//cdn2.hubspot.net/hub/-1/hub_generated/template_assets/1495141902003/hubspot_default/shared/responsive/layout.min.css\">\n\n\n<link rel=\"stylesheet\" href=\"https://www.belighted.com/hs-fs/hub/1684659/hub_generated/template_assets/8523445462/1569881984337/Marketplace/Neambo/Act21/Coded_Files/Act21.min.css\">\n\n\n\n\n</head>\n<body class=\"blog-1 featured-image-right   hs-content-id-4747392298 hs-blog-post hs-blog-id-4544204069\" style=\"\"></body>"
